#!/bin/bash

# Script de Redeploy - Painel QR Brasil
# Uso: ./redeploy.sh [full|quick|logs|status]

set -e

PROJECT_NAME="painel-qrbrasil"
COMPOSE_FILE="docker-compose.yml"

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para log colorido
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[ERRO] $1${NC}"
}

warning() {
    echo -e "${YELLOW}[AVISO] $1${NC}"
}

info() {
    echo -e "${BLUE}[INFO] $1${NC}"
}

# Redeploy completo (para e reconstr√≥i tudo)
full() {
    log "üîÑ Redeploy completo iniciado..."
    
    # Parar todos os containers
    log "Parando containers..."
    docker-compose -f $COMPOSE_FILE down
    
    # Limpar imagens antigas
    log "Limpando imagens antigas..."
    docker system prune -f
    
    # Rebuild completo
    log "Fazendo rebuild completo..."
    docker-compose -f $COMPOSE_FILE up -d --build --force-recreate
    
    log "‚úÖ Redeploy completo conclu√≠do!"
    log "üåê Acesse: http://$(curl -s ifconfig.me):3000"
    log "üîç Health check: http://$(curl -s ifconfig.me):3000/api/health"
}

# Redeploy r√°pido (apenas reinicia)
quick() {
    log "‚ö° Redeploy r√°pido iniciado..."
    
    # Restart dos containers
    log "Reiniciando containers..."
    docker-compose -f $COMPOSE_FILE restart
    
    log "‚úÖ Redeploy r√°pido conclu√≠do!"
    log "üåê Acesse: http://$(curl -s ifconfig.me):3000"
}

# Redeploy com pull (atualiza c√≥digo)
update() {
    log "üì• Redeploy com atualiza√ß√£o iniciado..."
    
    # Pull das mudan√ßas (se usando git)
    if [ -d ".git" ]; then
        log "Atualizando c√≥digo do reposit√≥rio..."
        git pull origin main
    fi
    
    # Parar containers
    log "Parando containers..."
    docker-compose -f $COMPOSE_FILE down
    
    # Rebuild
    log "Fazendo rebuild..."
    docker-compose -f $COMPOSE_FILE up -d --build
    
    log "‚úÖ Redeploy com atualiza√ß√£o conclu√≠do!"
    log "üåê Acesse: http://$(curl -s ifconfig.me):3000"
}

# Ver logs
logs() {
    log "üìã Exibindo logs..."
    docker-compose -f $COMPOSE_FILE logs -f
}

# Ver status
status() {
    log "üìä Status dos containers:"
    docker-compose -f $COMPOSE_FILE ps
    
    log "üìà Uso de recursos:"
    docker stats --no-stream
    
    log "üîç Health check:"
    curl -f http://localhost:3000/api/health 2>/dev/null && echo "‚úÖ Aplica√ß√£o saud√°vel" || echo "‚ùå Aplica√ß√£o com problemas"
}

# Rollback para vers√£o anterior
rollback() {
    log "‚è™ Iniciando rollback..."
    
    # Parar aplica√ß√£o
    docker-compose -f $COMPOSE_FILE down
    
    # Voltar para commit anterior (se usando git)
    if [ -d ".git" ]; then
        log "Voltando para vers√£o anterior..."
        git checkout HEAD~1
    fi
    
    # Redeploy
    docker-compose -f $COMPOSE_FILE up -d --build
    
    log "‚úÖ Rollback conclu√≠do!"
    log "üåê Acesse: http://$(curl -s ifconfig.me):3000"
}

# Limpar tudo
clean() {
    log "üßπ Limpeza completa iniciada..."
    
    # Parar e remover containers
    docker-compose -f $COMPOSE_FILE down -v
    
    # Remover imagens
    docker rmi $(docker images -q painel-qrbrasil*) 2>/dev/null || true
    
    # Limpar cache
    docker system prune -f
    
    log "‚úÖ Limpeza conclu√≠da!"
}

# Mostrar ajuda
help() {
    echo "Script de Redeploy - Painel QR Brasil"
    echo ""
    echo "Uso: $0 [comando]"
    echo ""
    echo "Comandos dispon√≠veis:"
    echo "  full      - Redeploy completo (para tudo e reconstr√≥i)"
    echo "  quick     - Redeploy r√°pido (apenas reinicia)"
    echo "  update    - Redeploy com atualiza√ß√£o do c√≥digo"
    echo "  rollback  - Voltar para vers√£o anterior"
    echo "  logs      - Ver logs em tempo real"
    echo "  status    - Ver status dos containers"
    echo "  clean     - Limpar tudo (containers, imagens, cache)"
    echo "  help      - Mostrar esta ajuda"
    echo ""
    echo "Exemplos:"
    echo "  $0 full     # Redeploy completo"
    echo "  $0 quick    # Redeploy r√°pido"
    echo "  $0 update   # Atualizar e redeploy"
    echo "  $0 logs     # Ver logs"
}

# Fun√ß√£o principal
main() {
    case "${1:-help}" in
        full)
            full
            ;;
        quick)
            quick
            ;;
        update)
            update
            ;;
        rollback)
            rollback
            ;;
        logs)
            logs
            ;;
        status)
            status
            ;;
        clean)
            clean
            ;;
        help|--help|-h)
            help
            ;;
        *)
            error "Comando inv√°lido: $1"
            help
            exit 1
            ;;
    esac
}

# Executar fun√ß√£o principal
main "$@" 