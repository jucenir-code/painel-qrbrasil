services:
  painel-qrbrasil:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: painel-qrbrasil
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - JWT_SECRET=fvbsCq72kHnKWb1JpM5zgGS0wMN
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - painel-network

  # Proxy reverso com Nginx e SSL
  nginx:
    image: nginx:alpine
    container_name: painel-qrbrasil-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-aws.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - painel-qrbrasil
    networks:
      - painel-network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # Certbot para gerenciar certificados SSL
  certbot:
    image: certbot/certbot
    container_name: painel-qrbrasil-certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email suporte@qrbrasil.com.br --agree-tos --no-eff-email -d painel.qrbrasil.com.br
    depends_on:
      - nginx
    networks:
      - painel-network

networks:
  painel-network:
    driver: bridge

volumes:
  ssl: 